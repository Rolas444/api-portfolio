// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  username String @unique
  password String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  resumes resume[]
}

model resume {
  id String @id @default(uuid())
  resumeName String @unique
  user User @relation(fields: [userId], references: [id])
  userId String
  name String?
  middleName String?
  lastName String?
  email String?
  phone String?
  address String?
  summary String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  workExperience workExperience[]
  education education[]
  skill skill[]
  website website[]
  project project[]
}

model workExperience {
  id String @id @default(uuid())
  resumeId String
  resume resume @relation(fields: [resumeId], references: [id])
  title String?
  company String?
  location String?
  startDate DateTime?
  endDate DateTime?
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model education {
  id String @id @default(uuid())
  resumeId String
  resume resume @relation(fields: [resumeId], references: [id])
  school String?
  degree String?
  fieldOfStudy String?
  startDate DateTime?
  endDate DateTime?
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model skill {
  id String @id @default(uuid())
  resumeId String
  resume resume @relation(fields: [resumeId], references: [id])
  name String?
  level String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model website {
  id String @id @default(uuid())
  resumeId String
  resume resume @relation(fields: [resumeId], references: [id])
  name String?
  url String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model project {
  id String @id @default(uuid())
  resumeId String
  resume resume @relation(fields: [resumeId], references: [id])
  name String?
  urlIcon String?
  urlDemo String?
  urlGithub String? 
  description String?
  startDate DateTime?
  endDate DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imagePrev imagePrev[]
  tecnology String[]
}

model imagePrev {
  id String @id @default(uuid())
  projectId String
  project project @relation(fields: [projectId], references: [id])
  url String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}